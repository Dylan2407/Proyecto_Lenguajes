SET SERVEROUTPUT ON;

-- Verifica que no exista la tabla
DECLARE
    tabla VARCHAR2(15) := 'TBL_DIRECCION';
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE ' || tabla;
  DBMS_OUTPUT.PUT_LINE('LA TABLA ' || tabla || ' FUE ENCONTRADA Y ELIMINADA EXITOSAMENTE');
EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('LA TABLA ' || tabla || ' NO EXISTE');
END;
/
-- TABLA DE EMPLEADOS
CREATE TABLE TBL_DIRECCION(
    ID_DIRECCION NUMBER NOT NULL PRIMARY KEY,
    DIRECCIONCOMPLETA VARCHAR2(50) NOT NULL,
    ID_DISTRITO NUMBER NOT NULL
);

-- CRUD PARA LA TABLA DE DIRECCION
-- PROCEDIMIENTO PARA REGISTRAR DIRECCIONES
CREATE OR REPLACE PROCEDURE SP_INSERTAR_DIRECCION(
    P_ID_DIRECCION TBL_DIRECCION.ID_DIRECCION%TYPE,
    P_DIRECCIONCOMPLETA TBL_DIRECCION.DIRECCIONCOMPLETA%TYPE,
    P_ID_DISTRITO TBL_DIRECCION.ID_DISTRITO%TYPE
)AS
    V_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO V_COUNT
    FROM TBL_DIRECCION
    WHERE ID_DIRECCION = P_ID_DIRECCION;
    
    IF V_COUNT > 0 THEN
        DBMS_OUTPUT.PUT_LINE('YA EXISTE UN REGISTRO CON EL ID ' || P_ID_DIRECCION);
    ELSE
        INSERT INTO TBL_DIRECCION(ID_DIRECCION,DIRECCIONCOMPLETA,ID_DISTRITO)
        VALUES (P_ID_DIRECCION,P_DIRECCIONCOMPLETA,P_ID_DISTRITO);
        COMMIT;
        DBMS_OUTPUT.PUT_LINE('REGISTRO REALIZADO');
    END IF;
END;
/

-- PROCEDIMIENTO PARA LEER DATOS DE UNA DIRECCION
CREATE OR REPLACE PROCEDURE SP_LEER_DIRECCION(
    P_ID_DIRECCION NUMBER
)IS
    V_ID_DIRECCION TBL_DIRECCION.ID_DIRECCION%TYPE;
    V_DIRECCIONCOMPLETA TBL_DIRECCION.DIRECCIONCOMPLETA%TYPE;
    V_ID_DISTRITO TBL_DIRECCION.ID_DISTRITO%TYPE;
BEGIN    
    SELECT ID_DIRECCION, DIRECCIONCOMPLETA, ID_DISTRITO INTO V_ID_DIRECCION, V_DIRECCIONCOMPLETA, V_ID_DISTRITO
    FROM TBL_DIRECCION
    WHERE ID_DIRECCION = P_ID_DIRECCION;
    
    DBMS_OUTPUT.PUT_LINE('ID DE LA DIRECCION: ' || V_ID_DIRECCION || ', DIRECCION COMPLETA: ' || V_DIRECCIONCOMPLETA || ', ID_DISTRITO: ' || V_ID_DISTRITO);
    
EXCEPTION
    WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('LA DIRECCION CON EL ID ' || P_ID_DIRECCION || ' NO FUE ENCONTRADA.');
END;
/

-- PROCEDIMIENTO PARA ACTUALIZAR UNA DIRECCION 
CREATE OR REPLACE PROCEDURE SP_ACTUALIZAR_DIRECCION(
    P_ID_DIRECCION TBL_DIRECCION.ID_DIRECCION%TYPE,
    P_DIRECCIONCOMPLETA TBL_DIRECCION.DIRECCIONCOMPLETA%TYPE,
    P_ID_DISTRITO TBL_DIRECCION.ID_DISTRITO%TYPE
)AS
    V_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO V_COUNT
    FROM TBL_DIRECCION
    WHERE ID_DIRECCION = P_ID_DIRECCION;

    IF V_COUNT > 0 THEN

        UPDATE TBL_DIRECCION
        SET ID_DIRECCION = P_ID_DIRECCION, DIRECCIONCOMPLETA = P_DIRECCIONCOMPLETA, ID_DISTRITO = P_ID_DISTRITO
        WHERE ID_DIRECCION = P_ID_DIRECCION;
        COMMIT;

        DBMS_OUTPUT.PUT_LINE('LA DIRECCION CON EL ID ' || P_ID_DIRECCION || ' HA SIDO ACTUALIZADO.');

    ELSE 

        DBMS_OUTPUT.PUT_LINE('LA DIRECCION CON EL ID ' || P_ID_DIRECCION || ' NO FUE ENCONTRADO.');

    END IF;
END;
/

-- PRECEDIMIENTO PARA ELIMINAR UN EMPLEADO
CREATE OR REPLACE PROCEDURE SP_ELIMINAR_DIRECCION(
    P_ID_DIRECCION TBL_DIRECCION.ID_DIRECCION%TYPE
)AS
    V_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO V_COUNT
    FROM TBL_DIRECCION
    WHERE ID_DIRECCION = P_ID_DIRECCION;

    IF V_COUNT > 0 THEN

        DELETE FROM TBL_DIRECCION
        WHERE ID_DIRECCION = P_ID_DIRECCION;
        COMMIT;

        DBMS_OUTPUT.PUT_LINE('LA DIRECCION CON EL ID ' || P_ID_DIRECCION || ' FUE ELIMINADA CORRECTAMENTE.');

    ELSE

        DBMS_OUTPUT.PUT_LINE('LA DIRECCION CON EL ID ' || P_ID_DIRECCION || ' NO FUE ENCONTRADA.');

    END IF;
END;
/

--VISTA PARA LISTAR TODAS LAS DIRECCIONES
CREATE OR REPLACE VIEW VISTA_LISTAR_DIRECCIONES AS 
SELECT ID_DIRECCION, Upper(DIRECCIONCOMPLETA) "DIRECCION COMPLETA", ID_DISTRITO FROM TBL_DIRECCION ORDER BY ID_DIRECCION WITH READ ONLY;

--VISTA PARA LISTAR CANTIDAD DE DIRECCIONES
CREATE OR REPLACE VIEW VISTA_CANTIDAD_DE_DIRECCIONES AS 
SELECT COUNT(ID_DIRECCION) "CANTIDAD DE DIRECCIONES" FROM TBL_DIRECCION WITH READ ONLY;

-- Bloque CRUD con SPs para TBL_DIRECCION
EXEC SP_INSERTAR_DIRECCION(1, 'Avenida 1 Detras Del Palo De Mangos', 1);
EXEC sp_leer_direccion(1);
EXEC sp_actualizar_direccion(1, 'Avenida 2 frente a la planta de chayotes', 1);
--EXEC sp_eliminar_direccion(1);

-- Ejecucion de la vista Direccion
SELECT "DIRECCION COMPLETA", ID_DISTRITO FROM vista_listar_direcciones;
SELECT "CANTIDAD DE DIRECCIONES" FROM vista_cantidad_de_direcciones;



