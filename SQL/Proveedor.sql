SET SERVEROUTPUT ON;

-- Verifica que no exista la tabla
DECLARE
    tabla VARCHAR2(31) := 'TBL_PROVEEDOR';
    tabla2 VARCHAR2(31) := 'TIPO_RESULTADO_PROVEEDOR';
    tabla3 VARCHAR2(31) := 'TABLA_RESULTADOS_PARA_PROVEEDOR';
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE ' || tabla || ' CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TYPE ' || tabla2;
  EXECUTE IMMEDIATE 'DROP TYPE ' || tabla3 ;
  DBMS_OUTPUT.PUT_LINE('LA TABLA ' || tabla || ' FUE ENCONTRADA Y ELIMINADA EXITOSAMENTE');
EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('LA TABLA ' || tabla || ' NO EXISTE');
END;
/

-- Crea tabla proveedor
CREATE TABLE TBL_PROVEEDOR (
ID_PROVEEDOR NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
CEDULA_JURIDICA NUMBER NOT NULL,
NOMBRE VARCHAR(30) NOT NULL,
DIRECCION VARCHAR(50) NOT NULL,
TELEFONO NUMBER NOT NULL,
FECHA_DE_REGISTRO DATE NOT NULL,
CONSTRAINT UQ_CEDULA_JURIDICA UNIQUE(CEDULA_JURIDICA)
);

-- SP para insertar proveedor
CREATE OR REPLACE PROCEDURE SP_INSERTAR_PROVEEDOR(
P_CEDULA_JURIDICA TBL_PROVEEDOR.CEDULA_JURIDICA%TYPE,
P_NOMBRE TBL_PROVEEDOR.NOMBRE%TYPE,
P_DIRECCION TBL_PROVEEDOR.DIRECCION%TYPE,
P_TELEFONO TBL_PROVEEDOR.TELEFONO%TYPE,
P_FECHA_DE_REGISTRO TBL_PROVEEDOR.FECHA_DE_REGISTRO%TYPE
)
AS
 V_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO V_COUNT
    FROM TBL_PROVEEDOR
    WHERE CEDULA_JURIDICA = P_CEDULA_JURIDICA;

    IF V_COUNT > 0 THEN
        DBMS_OUTPUT.PUT_LINE('YA EXISTE UN REGISTRO CON LA CEDULA JURIDICA ' || P_CEDULA_JURIDICA);
    ELSE
        INSERT INTO TBL_PROVEEDOR(CEDULA_JURIDICA,NOMBRE,DIRECCION,TELEFONO,FECHA_DE_REGISTRO)
        VALUES (P_CEDULA_JURIDICA,P_NOMBRE,P_DIRECCION,P_TELEFONO,P_FECHA_DE_REGISTRO);
        COMMIT;
        DBMS_OUTPUT.PUT_LINE('REGISTRO REALIZADO');
    END IF;
END;
/

-- SP para actualizar registros en la tabla proveedor
CREATE OR REPLACE PROCEDURE SP_ACTUALIZAR_PROVEEDOR(
P_CEDULA_JURIDICA TBL_PROVEEDOR.CEDULA_JURIDICA%TYPE,
P_NOMBRE TBL_PROVEEDOR.NOMBRE%TYPE,
P_DIRECCION TBL_PROVEEDOR.DIRECCION%TYPE,
P_TELEFONO TBL_PROVEEDOR.TELEFONO%TYPE,
P_FECHA_DE_REGISTRO TBL_PROVEEDOR.FECHA_DE_REGISTRO%TYPE
) AS
 V_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO V_COUNT
    FROM TBL_PROVEEDOR
    WHERE CEDULA_JURIDICA = P_CEDULA_JURIDICA;

    IF V_COUNT > 0 THEN
        UPDATE TBL_PROVEEDOR
        SET CEDULA_JURIDICA = P_CEDULA_JURIDICA, NOMBRE = P_NOMBRE, DIRECCION = P_DIRECCION, TELEFONO = P_TELEFONO, FECHA_DE_REGISTRO = P_FECHA_DE_REGISTRO
        WHERE CEDULA_JURIDICA = P_CEDULA_JURIDICA;
        COMMIT;
        DBMS_OUTPUT.PUT_LINE('EL TBL_PROVEEDOR CON EL ID ' || P_CEDULA_JURIDICA || ' HA SIDO ACTUALIZADO.');
    ELSE 
        DBMS_OUTPUT.PUT_LINE('EL TBL_PROVEEDOR CON EL ID ' || P_CEDULA_JURIDICA || ' NO FUE ENCONTRADO.');
    END IF;
END;
/

-- SP para eliminar un registro en la tabla proveedor
CREATE OR REPLACE PROCEDURE SP_ELIMINAR_PROVEEDOR(
P_CEDULA_JURIDICA TBL_PROVEEDOR.CEDULA_JURIDICA%TYPE
) AS
 V_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO V_COUNT
    FROM TBL_PROVEEDOR
    WHERE CEDULA_JURIDICA = P_CEDULA_JURIDICA;

    IF V_COUNT > 0 THEN
        DELETE  FROM TBL_PROVEEDOR
        WHERE CEDULA_JURIDICA = P_CEDULA_JURIDICA;
        COMMIT;
        DBMS_OUTPUT.PUT_LINE('EL PROVEEDOR CON LA CEDULA ' || P_CEDULA_JURIDICA || ' HA SIDO BORRADO.');
    ELSE 
        DBMS_OUTPUT.PUT_LINE('EL PROVEEDOR CON LA CEDULA' || P_CEDULA_JURIDICA || ' NO FUE ENCONTRADO.');
    END IF;
END;
/

-- SP para leer datos de proveedor segun cedula juridica
CREATE OR REPLACE PROCEDURE SP_LEER_PROVEEDORES(
    P_CEDULA_JURIDICA NUMBER
)IS
    V_CEDULA_JURIDICA TBL_PROVEEDOR.CEDULA_JURIDICA%TYPE;
    V_NOMBRE TBL_PROVEEDOR.NOMBRE%TYPE;
    V_DIRECCION TBL_PROVEEDOR.DIRECCION%TYPE;
    V_TELEFONO TBL_PROVEEDOR.TELEFONO%TYPE;
    V_FECHA_DE_INGRESO TBL_PROVEEDOR.FECHA_DE_REGISTRO%TYPE;
BEGIN    
    SELECT CEDULA_JURIDICA, NOMBRE, DIRECCION, TELEFONO, FECHA_DE_REGISTRO INTO V_CEDULA_JURIDICA, V_NOMBRE, V_DIRECCION, V_TELEFONO, V_FECHA_DE_INGRESO
    FROM TBL_PROVEEDOR
    WHERE CEDULA_JURIDICA = P_CEDULA_JURIDICA;    
    DBMS_OUTPUT.PUT_LINE('CEDULA JURIDICA: ' || V_CEDULA_JURIDICA || ', NOMBRE: ' || V_NOMBRE || ', DIRECCION: ' || V_DIRECCION || ', TELEFONO: ' || V_TELEFONO || ', FECHA_DE_INGRESO: ' || V_FECHA_DE_INGRESO);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('EL PROVEEDOR CON EL ID ' || V_CEDULA_JURIDICA || ' NO FUE ENCONTRADO.');
END;
/

-- Inicia bloque de funciones

-- Declarando objeto  de tipo TYPE para manejar multiples resultados en la funcion de busqueda por fecha devolvera los datos del proveedor
/*https://stackoverflow.com/questions/56935878/return-multiple-values-from-oracle-function*/
CREATE OR REPLACE TYPE TIPO_RESULTADO_PROVEEDOR FORCE AS OBJECT (
    NOMBRE VARCHAR2(50),
    FECHA_DE_REGISTRO DATE
);
/

-- Crear el tipo de tabla para el objeto, esto permitirá manejar multiples resultados en la función de busqueda
CREATE OR REPLACE TYPE TABLA_RESULTADOS_PARA_PROVEEDOR AS TABLE OF TIPO_RESULTADO_PROVEEDOR;
/

-- Busca proveedores registrados desde una fecha deseada
CREATE OR REPLACE FUNCTION CONSULTAR_PROVEEDOR_POR_FECHA_DE_REGISTRO(FECHA_INGRESO_IN DATE)
RETURN TABLA_RESULTADOS_PARA_PROVEEDOR PIPELINED
IS
    v_found BOOLEAN := FALSE;
BEGIN
    -- Buscar el nombre del proveedor en la tabla de proveedores
    FOR R IN (
        SELECT P.NOMBRE, P.FECHA_DE_REGISTRO
        FROM TBL_PROVEEDOR P
        WHERE P.FECHA_DE_REGISTRO BETWEEN FECHA_INGRESO_IN AND SYSDATE
    ) LOOP
        PIPE ROW(TIPO_RESULTADO_PROVEEDOR(R.NOMBRE, R.FECHA_DE_REGISTRO));
        v_found := TRUE;
    END LOOP;
    IF NOT v_found THEN
        PIPE ROW(TIPO_RESULTADO_PROVEEDOR('ERROR CONSULTANDO LA FECHA', NULL));
    END IF;
    RETURN;
EXCEPTION
    WHEN OTHERS THEN
        PIPE ROW(TIPO_RESULTADO_PROVEEDOR('ERROR CONSULTANDO LA FECHA', NULL));
        RETURN;
END;
/

-- Busca un proveedor segun nombre


-- Insertar registros en la tabla de proveedores

EXEC SP_INSERTAR_PROVEEDOR(101234567, 'Proveedor Uno', 'Direccion 1', 22223333, TO_DATE('15-01-2020', 'DD-MM-YYYY'));

EXEC SP_INSERTAR_PROVEEDOR(102345678, 'Proveedor Dos', 'Direccion 2', 22224444, TO_DATE('20-02-2023', 'DD-MM-YYYY'));

EXEC SP_INSERTAR_PROVEEDOR(103456789, 'Proveedor Tres', 'Direccion 3', 22225555, TO_DATE('25-03-2015', 'DD-MM-YYYY'));

EXEC SP_INSERTAR_PROVEEDOR(104567890, 'Proveedor Cuatro', 'Direccion 4', 22226666, TO_DATE('30-04-2017', 'DD-MM-YYYY'));

EXEC SP_INSERTAR_PROVEEDOR(105678901, 'Proveedor Cinco', 'Direccion 5', 22227777, TO_DATE('10-05-2023', 'DD-MM-YYYY'));

SELECT * FROM TBL_PROVEEDOR WHERE FECHA_DE_REGISTRO BETWEEN TO_DATE('01-01-15', 'DD-MM-YY') AND TO_DATE(SYSDATE, 'DD-MM-YY');

-- Llamada a la función
SELECT NOMBRE, FECHA_DE_REGISTRO FROM TABLE(consultar_proveedor_por_fecha_de_registro(TO_DATE('20-01-21', 'DD-MM-YY')));
